const usePreloadImages = images => {
    const preloadImages = useRef([])
    const [_images, setImages] = useState(
        images.map(image => ({
            ...image,
            original: image.thumbnail,
            imageSet: null,
            originalAlt: `${altPrefix}${image.originalAlt}`,
            thumbnailAlt: `${altPrefix}${image.thumbnailAlt}`,
    })))
    
    useEffect(() => {
        images.map(image => {
            const _image = new Image()
            _image.src = url
            _image.onload = () => {
                const found = preloadImages.current.find(i => i.url === url)
                if (found) {
                    found.loaded = true
                    const countLoaded = preloadImages.current.filter(
                        ({ loaded }) => loaded
                    ).length
                    const countPreloaded = preloadImages.current.length
                    const allLoaded = countLoaded === countPreloaded
                    if (allLoaded) {
                        setImages(preloadImages.current)
                    }
                }
            }

            const _alt = `${altPrefix}${alt}`
            const _image = {
                original: require('static/img/loading.jpg'),
                thumbnail: require('static/img/loading.jpg'),
                thumbnailClass: 'thumb',
                originalAlt: _alt,
                thumbnailAlt: _alt,
            }
            preloadImages.current.push({
                image: _image,
                url,
                loaded: false,
                ..._image,
                original: url,
                thumbnail: url,
            })
        })
    }, [])
    return _images
}
